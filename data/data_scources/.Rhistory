install.packages("RPostgreSQL")
source('~/PycharmProjects/enekrend/data/R_scripts/dtx_parser_kekkonyv.R')
install.packages("sqldf")
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
psql_connection <- dbConnect(drv, dbname = "song_slides", host = "localhost",
port = 5432, user = "postgres",
password = "step_in_psql")
dbExistsTable(psql_connection, "songs")
max_book_id <- dbGetQuery(psql_connection, "SELECT MAX(id) FROM books")
max_book_id
class(max_book_id)
dbGetQuery(psql_connection, "SELECT MAX(id) FROM books")
dbGetQuery(psql_connection, "SELECT MAX(id) FROM books")$max
class(dbGetQuery(psql_connection, "SELECT MAX(id) FROM books")$max)
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("dtx_parser_kekkonyv.R")
source("psql_connection.R")
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("dtx_parser_kekkonyv.R")
setwd("~/PycharmProjects/enekrend/data/R_scripts")
## cleaning up
rm(file_path, i, j, k, raw_data, slide_number, get_song_numbers, get_song_titles, strip_leading_whitespace)
source("psql_connection.R")
rm(max_book_id)
## cleaning up
rm(drv)
## cleaning up
rm(file_path, i, j, k, raw_data, slide_number, get_song_numbers, get_song_titles,
strip_leading_whitespace, slides_of_song)
songs_to_db <- data.frame(songs$id, songs$title, songs$lyrics)
songs_to_db <- data.frame(songs$id, songs$title, songs$lyrics, stringsAsFactors = FALSE)
songs_to_db <- data.frame(id = songs$id, title = songs$title, lyrics = songs$lyrics,
stringsAsFactors = FALSE)
get_max_id <- function(connection, table) {
greatest_id <- dbGetQuery(connection, paste0("SELECT MAX(id) FROM", table))$max
return(greatest_id)
}
get_max_id(psql_connection, "books")
get_max_id <- function(connection, table) {
greatest_id <- dbGetQuery(connection, paste0("SELECT MAX(id) FROM ", table))$max
return(greatest_id)
}
get_max_id(psql_connection, "books")
get_max_id(psql_connection, "slides")
?seq
seq(from = 1, by = 1, length.out = 12)
?rep
rep(1, 34)
book_index_id_start <- NA
greatest_book_id <- get_max_id(psql_connection, "books")
if (is.na(greatest_book_id)) {
book_index_id_start <- 1
} else {book_index_id_start <- greatest_book_id + 1}
number_of_entries <- nrow(songs)
book_index_id <- seq(from = book_index_id_start, by = 1, length.out = number_of_entries)
book_id_vector <- rep(current_book_id, number_of_entries)
book_index_to_db <- data.frame(id = book_index_id, song_id = songs$id,
book_id = book_id_vector, song_number = songs$number)
current_book_id <- 1
book_index_id_start <- NA
greatest_book_id <- get_max_id(psql_connection, "books")
if (is.na(greatest_book_id)) {
book_index_id_start <- 1
} else {book_index_id_start <- greatest_book_id + 1}
number_of_entries <- nrow(songs)
book_index_id <- seq(from = book_index_id_start, by = 1, length.out = number_of_entries)
book_id_vector <- rep(current_book_id, number_of_entries)
book_index_to_db <- data.frame(id = book_index_id, song_id = songs$id,
book_id = book_id_vector, song_number = songs$number)
View(book_index_to_db)
book_index_to_db <- data.frame(id = book_index_id, song_id = songs$id,
book_id = book_id_vector, song_number = songs$number,
stringsAsFactors = FALSE)
source("dtx_parser_kekkonyv.R")
source("dtx_parser_kekkonyv.R")
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("dtx_parser_kekkonyv.R")
songs_to_db <- data.frame(id = songs$id, title = songs$title, lyrics = songs$lyrics,
stringsAsFactors = FALSE)
book_index_id_start <- NA
greatest_book_id <- get_max_id(psql_connection, "books")
if (is.na(greatest_book_id)) {
book_index_id_start <- 1
} else {book_index_id_start <- greatest_book_id + 1}
number_of_entries <- nrow(songs)
book_index_id <- seq(from = book_index_id_start, by = 1, length.out = number_of_entries)
book_id_vector <- rep(current_book_id, number_of_entries)
book_index_to_db <- data.frame(id = book_index_id, song_id = songs$id,
book_id = book_id_vector, song_number = songs$number,
stringsAsFactors = FALSE)
book_index_id_start <- NA
greatest_book_id <- get_max_id(psql_connection, "books_index")
if (is.na(greatest_book_id)) {
book_index_id_start <- 1
} else {book_index_id_start <- greatest_book_id + 1}
number_of_entries <- nrow(songs)
book_index_id <- seq(from = book_index_id_start, by = 1, length.out = number_of_entries)
book_id_vector <- rep(current_book_id, number_of_entries)
book_index_to_db <- data.frame(id = book_index_id, song_id = songs$id,
book_id = book_id_vector, song_number = songs$number,
stringsAsFactors = FALSE)
get_max_id(psql_connection, "books_index")
is.na(get_max_id(psql_connection, "books_index"))
is.na(get_max_id(psql_connection, "book_index"))
book_index_id_start <- NA
greatest_book_id <- get_max_id(psql_connection, "book_index")
if (is.na(greatest_book_id)) {
book_index_id_start <- 1
} else {book_index_id_start <- greatest_book_id + 1}
number_of_entries <- nrow(songs)
book_index_id <- seq(from = book_index_id_start, by = 1, length.out = number_of_entries)
book_id_vector <- rep(current_book_id, number_of_entries)
book_index_to_db <- data.frame(id = book_index_id, song_id = songs$id,
book_id = book_id_vector, song_number = songs$number,
stringsAsFactors = FALSE)
write_data_to_table(psql_connection, songs_to_db, "songs")
head(songs$title)
strip_leading_whitespace <- function(char_vector) {
return(sub("^ ?", "", char_vector))
}
strip_leading_whitespace(head(songs$title))
strip_leading_whitespace <- function(char_vector) {
return(sub("^ {,2}", "", char_vector))
}
strip_leading_whitespace(head(songs$title))
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("dtx_parser_kekkonyv.R")
current_book_id <- 1
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("psql_connection.R")
psql_connection <- get_psql_connection()
songs_to_db <- data.frame(id = songs$id, title = songs$title, lyrics = songs$lyrics,
stringsAsFactors = FALSE)
write_data_to_table(psql_connection, songs_to_db, "songs")
head(songs_to_db$title)
head(songs$title)
strip_leading_whitespace <- function(char_vector) {
return(sub("^ {,2}", "", char_vector))
}
strip_leading_whitespace(head(songs$title))
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("dtx_parser_kekkonyv.R")
head(songs$title)
songs_to_db <- data.frame(id = songs$id, title = songs$title, lyrics = songs$lyrics,
stringsAsFactors = FALSE)
write_data_to_table(psql_connection, songs_to_db, "songs")
source('~/PycharmProjects/enekrend/data/R_scripts/db_handler.R')
write_data_to_table(psql_connection, book_index_to_db, "book_index")
write_data_to_table(psql_connection, book_index_to_db, "book_index")
setwd("~/PycharmProjects/enekrend/data/R_scripts")
source("dtx_parser_kekkonyv.R")
songs_to_db <- data.frame(id = songs$id, title = songs$title, lyrics = songs$lyrics,
stringsAsFactors = FALSE)
write_data_to_table(psql_connection, songs_to_db, "songs")
write_data_to_table(psql_connection, book_index_to_db, "book_index")
